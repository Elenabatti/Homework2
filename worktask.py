# 1. Напишите программу, которая принимает на вход число N и выдаёт последовательность из N членов.
# n = int(input())
# for i in range(n - 1):
#     print((-3) ** i, end=', ')
# print((-3) ** (n -1))

# Или можно через списки
# n = int(input())
# a = []
# for i in range(n):
#     a.append((-3) ** i) вместо принта эти элементы будут добавляться в спикок append
# print(*a, sep =', ')

#  # распоковываем списоки и разделяем с помощью separator

# 2. Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.
# *Пример:*- Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}

# n = int(input())
# print('{', end='') # выводим фигурную скобочку
# for i in range(1, n):
#     print(f'{i} : {3 * i +1}', end=', ') # генерируем число по правилу 3n + 1 но заменяем n на i
# print(f'{n} : {3 * n +1}', end=', }')    


# 3. Напишите программу, в которой пользователь будет задавать две строки,
#  а программа - определять количество вхождений одной строки в другой.
# some_str_1 = input()
# some_str_2 = input()
# some_str_1.count((some_str_2) or some_str_2.count(some_str_1))

# Решение в одну строку
# print(input().count(input()))

#Решение с помощью алгаритмов
some_str_1 = input() # ввели строки
some_str_2 = input()
len_str_2 = len(some_str_2) # отображаем длину  с помощью переменной
i = 0     # предварительно находим индекс, пока ствим равным нулю
count = 0
while i < len(some_str_1):      # пока i меньше длины первой строки нужно делать следующее
    if some_str_1[i : i + len_str_2] == some_str_2:
        count += 1
        i += 2
    else:
        i += 1
print(count)
